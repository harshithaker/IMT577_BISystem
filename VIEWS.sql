--VIEWS FOR QUESTION 1

CREATE VIEW VW_STORE_PERFORMANCE_CUMMULATIVE AS
(
SELECT YEAR,MONTH_NAME,MONTH_NUM_IN_YEAR as MONTH_NUMBER, STORE_NUMBER,
SUM(ACT_AMT) OVER (PARTITION BY STORE_NUMBER ORDER BY MONTH_NUM_IN_YEAR ASC) AS ACT_CUMMULATIVE_SALE,
SUM(TARGET_AMT) OVER (PARTITION BY STORE_NUMBER ORDER BY MONTH_NUM_IN_YEAR ASC) AS TARGET_CUMMULATIVE_SALE
FROM
(
SELECT YEAR, MONTH_NAME, MONTH_NUM_IN_YEAR, STORE_NUMBER, SUM(TARGET_AMT) AS TARGET_AMT, SUM(ACT_AMT) AS ACT_AMT
FROM 
(
SELECT DD.YEAR,DD.MONTH_NAME, DD.MONTH_NUM_IN_YEAR, DS.STORE_NUMBER, SUM(FS.SALES_TARGET_AMOUNT) TARGET_AMT, 0 AS ACT_AMT
FROM FACT_SRC_SALES_TARGET FS
INNER JOIN DIM_STORE DS ON FS.DIM_STORE_ID = DS.DIM_STORE_ID
INNER JOIN DIM_DATE DD ON FS.DATE_PKEY = DD.DATE_PKEY
WHERE YEAR = 2014 AND STORE_NUMBER in (10,21)
GROUP BY DD.Year,DD.MONTH_NAME, DD.MONTH_NUM_IN_YEAR, DS.STORE_NUMBER

UNION 

SELECT DD.YEAR, DD.MONTH_NAME, DD.MONTH_NUM_IN_YEAR,  DS.STORE_NUMBER, 0 AS TARGET_AMT, SUM(FS.SALE_AMOUNT) AS ACT_AMT
FROM FACT_SALES FS
INNER JOIN DIM_STORE DS ON FS.DIM_STORE_ID = DS.DIM_STORE_ID
INNER JOIN DIM_DATE DD ON FS.DATE_PKEY = DD.DATE_PKEY
WHERE YEAR = 2014 AND STORE_NUMBER in (10,21)
GROUP BY DD.YEAR, DD.MONTH_NAME, DD.MONTH_NUM_IN_YEAR, DS.STORE_NUMBER
)
GROUP BY YEAR, MONTH_NAME, MONTH_NUM_IN_YEAR, STORE_NUMBER
)
ORDER BY MONTH_NUM_IN_YEAR , STORE_NUMBER
);  

CREATE VIEW VW_STORE_PERFORMANCE AS
(
SELECT YEAR, MONTH_NAME, MONTH_NUM_IN_YEAR AS MONTH_NUMBER, STORE_NUMBER, SUM(TARGET_AMT) AS TARGET_AMT, SUM(ACT_AMT) AS ACT_AMT, 
ROUND((SUM(ACT_AMT)/SUM(TARGET_AMT))*100,2) AS PERCENT_TARGET_ACHIEVED
FROM 
(
SELECT DD.YEAR,DD.MONTH_NAME, DD.MONTH_NUM_IN_YEAR, DS.STORE_NUMBER, SUM(FS.SALES_TARGET_AMOUNT) TARGET_AMT, 0 AS ACT_AMT
FROM FACT_SRC_SALES_TARGET FS
INNER JOIN DIM_STORE DS ON FS.DIM_STORE_ID = DS.DIM_STORE_ID
INNER JOIN DIM_DATE DD ON FS.DATE_PKEY = DD.DATE_PKEY
WHERE YEAR = 2014 AND STORE_NUMBER in (10,21)
GROUP BY DD.Year,DD.MONTH_NAME, DD.MONTH_NUM_IN_YEAR, DS.STORE_NUMBER

UNION 

SELECT DD.YEAR, DD.MONTH_NAME, DD.MONTH_NUM_IN_YEAR,  DS.STORE_NUMBER, 0 AS TARGET_AMT, SUM(FS.SALE_AMOUNT) AS ACT_AMT
FROM FACT_SALES FS
INNER JOIN DIM_STORE DS ON FS.DIM_STORE_ID = DS.DIM_STORE_ID
INNER JOIN DIM_DATE DD ON FS.DATE_PKEY = DD.DATE_PKEY
WHERE YEAR = 2014 AND STORE_NUMBER in (10,21)
GROUP BY DD.YEAR, DD.MONTH_NAME, DD.MONTH_NUM_IN_YEAR, DS.STORE_NUMBER
)
GROUP BY YEAR, MONTH_NAME, MONTH_NUM_IN_YEAR, STORE_NUMBER
ORDER BY YEAR,MONTH_NUM_IN_YEAR 
);

--VIEWS FOR QUESTION 2

CREATE VIEW VW_BONUS_SHARE AS
(
SELECT YEAR, STORE_NUMBER, SUM(TARGET_AMT) AS TARGET_AMT, SUM(ACT_AMT) AS ACT_AMT, 
ROUND((SUM(ACT_AMT)/SUM(TARGET_AMT))*100,2) AS PERCENT_TARGET_ACHIEVED
FROM 
(
SELECT DD.Year, DS.STORE_NUMBER, SUM(FS.SALES_TARGET_AMOUNT) TARGET_AMT, 0 AS ACT_AMT
FROM FACT_SRC_SALES_TARGET FS
INNER JOIN DIM_STORE DS ON FS.DIM_STORE_ID = DS.DIM_STORE_ID
INNER JOIN DIM_DATE DD ON FS.DATE_PKEY = DD.DATE_PKEY
WHERE YEAR = 2013 AND STORE_NUMBER in (10,21)
GROUP BY DD.Year, DS.STORE_NUMBER

UNION 

SELECT DD.Year, DS.STORE_NUMBER, 0 AS TARGET_AMT, SUM(FS.SALE_AMOUNT) AS ACT_AMT
FROM FACT_SALES FS
INNER JOIN DIM_STORE DS ON FS.DIM_STORE_ID = DS.DIM_STORE_ID
INNER JOIN DIM_DATE DD ON FS.DATE_PKEY = DD.DATE_PKEY
WHERE YEAR = 2013 AND STORE_NUMBER in (10,21)
GROUP BY DD.Year, DS.STORE_NUMBER
)
GROUP BY YEAR, STORE_NUMBER
ORDER BY YEAR
);


--VIEWS FOR QUESTION 3
CREATE VIEW VW_PRODUCT_SALES AS
(
SELECT DD.DAY_NAME, DD.DAY_NUM_IN_WEEK as DAY_NUMBER, DS.STORE_NUMBER, DP.PRODUCT_NAME, DP.PRODUCT_TYPE, DP.PRODUCT_CATEGORY, 
SUM(FS.SALE_QUANTITY) AS QUANTITY, SUM(FS.SALE_AMOUNT) AS SALE, SUM(FS.SALE_TOTAL_PROFIT) AS PROFIT
FROM FACT_SALES FS
INNER JOIN DIM_DATE DD ON FS.DATE_PKEY = DD.DATE_PKEY
INNER JOIN DIM_STORE DS ON FS.DIM_STORE_ID = DS.DIM_STORE_ID
INNER JOIN DIM_PRODUCT DP ON FS.DIM_PRODUCT_ID = DP.DIM_PRODUCT_ID
WHERE STORE_NUMBER IN (10,21)
GROUP BY DD.DAY_NAME,DD.DAY_NUM_IN_WEEK, DS.STORE_NUMBER, DP.PRODUCT_NAME, DP.PRODUCT_TYPE, DP.PRODUCT_CATEGORY
ORDER BY DAY_NUMBER, DS.STORE_NUMBER, DP.PRODUCT_NAME
);

--VIEWS FOR QUESTION 4

CREATE VIEW VW_STATE_PERFORMANCE AS
(
SELECT DD.DATE, DD.DAY_NAME,DD.YEAR, DD.MONTH_NAME, DL.STATE_PROVINCE, X.STORE_COUNT,
DP.PRODUCT_NAME, DP.PRODUCT_TYPE, DP.PRODUCT_CATEGORY,
SUM(FS.SALE_QUANTITY) AS QUANTITY, SUM(FS.SALE_AMOUNT) AS SALE, SUM(FS.SALE_TOTAL_PROFIT) AS PROFIT
FROM FACT_SALES FS
INNER JOIN DIM_STORE DS ON FS.DIM_STORE_ID = DS.DIM_STORE_ID
INNER JOIN DIM_LOCATION DL ON DS.DIM_LOCATION_ID = DL.DIM_LOCATION_ID
INNER JOIN DIM_DATE DD ON FS.DATE_PKEY = DD.DATE_PKEY
INNER JOIN DIM_PRODUCT DP ON FS.DIM_PRODUCT_ID = DP.DIM_PRODUCT_ID
INNER JOIN 
(
SELECT DL.STATE_PROVINCE, COUNT(DS.STORE_NUMBER) STORE_COUNT
FROM DIM_STORE DS
INNER JOIN DIM_LOCATION DL ON DS.DIM_LOCATION_ID = DL.DIM_LOCATION_ID
WHERE DL.STATE_PROVINCE != 'UNKNOWN'  
GROUP BY DL.STATE_PROVINCE
) X ON DL.STATE_PROVINCE = X.STATE_PROVINCE
WHERE DL.STATE_PROVINCE != 'UNKNOWN'  
GROUP BY DD.DATE,  DD.DAY_NAME, DD.YEAR, DD.MONTH_NAME, DL.STATE_PROVINCE, X.STORE_COUNT,
DP.PRODUCT_NAME, DP.PRODUCT_TYPE, DP.PRODUCT_CATEGORY
);

SELECT * FROM VW_BONUS_SHARE
SELECT * FROM VW_STATE_PERFORMANCE
SELECT * FROM VW_STORE_PERFORMANCE
SELECT * FROM VW_STORE_PERFORMANCE_CUMMULATIVE
SELECT * FROM VW_PRODUCT_SALES



